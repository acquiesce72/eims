<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>

    @Styles.Render("~/css")

    <!-- Font Awesome -->
    <link href="@Url.Content("~/Content/bower_components/font-awesome/css/font-awesome.min.css")" rel="stylesheet" type="text/css" />
    <!-- Ionicons -->
    <link href="@Url.Content("~/Content/bower_components/Ionicons/css/ionicons.min.css")" rel="stylesheet" type="text/css" />
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/bower_components/select2/dist/css/select2.min.css")" rel="stylesheet">
    <!-- bootstrap datepicker -->
    <link href="@Url.Content("~/Content/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css")" rel="stylesheet">
    <!-- iCheck for checkboxes and radio inputs -->
    <link href="@Url.Content("~/Content/plugins/iCheck/all.css")" rel="stylesheet">
    <!-- daterange picker -->
    <link href="@Url.Content("~/Content/bower_components/bootstrap-daterangepicker/daterangepicker.css")" rel="stylesheet">
    <!-- Morris charts -->
    <link rel="stylesheet" href="@Url.Content("~/Content/bower_components/morris.js/morris.css")">
    <!-- Toastr -->
    <link href="@Url.Content("~/Content/toastr.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/team/css/style.css")" rel="stylesheet" />

    <style>
        .required {
            color:red;
        }

        .form-control[readonly].no-gray {
            background-color: white;
            border: 0;
            outline: 0;
            background: transparent;
            border-bottom: 1px solid black;
        }
    </style>
 
    @Scripts.Render("~/modernizr")
    <!--[if lt IE 9]>
    <script src=Url.Content("~/Content/ie/html5shiv.min.js")"></script>
    <script src=Url.Content("~/Content/ie/respond.min.js")"></script>
    <![endif]-->

    @RenderSection("Styles", required: false)

</head>
<body class="@Session["skin"].ToString()">
    <!-- Site wrapper -->
    <div class="wrapper">
        <header class="main-header">
            <!-- Logo -->
            <a href="@Url.Action("Index", "Home")" class="logo">
                <!-- mini logo for sidebar mini 50x50 pixels -->
                <span class="logo-mini">EIMS</span>
                <!--<span class="logo-mini"><b>A</b>LT</span> -->
                <!-- logo for regular state and mobile devices -->
                <span class="logo-lg"><b>EIMS</b></span>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-static-top">
                <!-- Sidebar toggle button-->
                <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">

                        @if (Session["User_role"].ToString() != "Employee")
                        {
                        <!-- 
                            <li class="dropdown notifications-menu">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-users"></i>
                                    <span class="label label-info">4</span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="header">You have 4 notifications</li>
                                    <li>
                                        <!-- inner menu: contains the actual data
                                        <ul class="menu">
                                            <li>
                                                <a href="#">
                                                    <i class="fa fa-users text-aqua"></i> 5 new members joined today
                                                </a>
                                                <a href="#">
                                                    <i class="fa fa-users text-aqua"></i> 5 new members joined today
                                                </a>
                                                <a href="#">
                                                    <i class="fa fa-users text-aqua"></i> 5 new members joined today
                                                </a>
                                                <a href="#">
                                                    <i class="fa fa-users text-aqua"></i> 5 new members joined today
                                                </a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="footer"><a href="#">View all</a></li>
                                </ul>
                            </li>-->
                            

                            if (Session["User_role"].ToString() == "Administrator" || Session["User_role"].ToString() == "President" || Session["User_role"].ToString() == "VPA" || Session["User_role"].ToString() == "VPAA")
                            {
                                <!-- <li class="dropdown notifications-menu">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                        <i class="fa fa-child"></i>
                                        <span class="label label-danger">11</span>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li class="header">You have 11 notifications</li>
                                        <li>
                        
                                            <ul class="menu">
                                                <li>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-child text-red"></i> 5 new members joined today
                                                    </a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="footer"><a href="#">View all</a></li>
                                    </ul>
                                </li>

                                <li class="dropdown notifications-menu">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                        <i class="fa fa-globe"></i>
                                        <span class="label label-success">7</span>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li class="header">You have 7 notifications</li>
                                        <li>
                                            
                                            <ul class="menu">
                                                <li>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                    <a href="#">
                                                        <i class="fa fa-globe text-green"></i> 5 new members joined today
                                                    </a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="footer"><a href="#">View all</a></li>
                                    </ul>
                                </li>-->
                                
                            }

                        }
                      
                        
                        <li class="dropdown user user-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <img src="@Url.Action("UserPicture", "Home", new { id = Session["UserID"] })" class="user-image" alt="User Image">

                                <span class="hidden-xs">@Session["User_firstname"].ToString()</span>

                            </a>
                            <ul class="dropdown-menu">
                                <!-- User image -->
                                <li class="user-header">                                    
                                    <img src="@Url.Action("UserPicture", "Home", new { id = Session["UserID"] })" class="img-circle" alt="User Image">
                                    <p>
                                        @Session["User_firstname"].ToString() @Session["User_middlename"].ToString() @Session["User_lastname"].ToString() <small>@Session["User_role"].ToString()</small>

                                        <small>User since @Session["User_datejoined"].ToString()</small>

                                    </p>
                                </li>

                                <!-- Menu Footer-->
                                <li class="user-footer">
                                    <!--<div class="pull-left">
                                            <a href="#" class="btn btn-default btn-flat">Profile</a>
                                        </div> -->
                                    <div class="pull-right">
                                        <a href="@Url.Action("Logout", "Account")" class="btn btn-default btn-flat">Sign out</a>
                                    </div>
                                </li>
                            </ul>
                        </li>
                        <!-- Control Sidebar Toggle Button -->
                        @if (Session["User_role"].ToString() != "Employee")
                        {
                            <li>
                                <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i></a>
                            </li>
                        }
                        
                    </ul>
                </div>
            </nav>
        </header>
        <!-- =============================================== -->
        <!-- Left side column. contains the sidebar -->
        <aside class="main-sidebar">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                <!-- Sidebar user panel -->
                <div class="user-panel">
                    <div class="pull-left image">
                        <img src="@Url.Action("UserPicture", "Home", new { id = Session["UserID"] })" class="img-circle" alt="User Image">
                    </div>
                    <div class="pull-left info">
                        <p>@Session["User_lastname"].ToString(), @Session["User_firstname"].ToString() @Session["User_middlename"].ToString() </p>
                        <span class="label label-info">@Session["User_role"].ToString()</span>
                    </div>
                </div>
                <br />
                <!-- search form
                <form action="#" method="get" class="sidebar-form">
                    <div class="input-group">
                        <input type="text" name="q" class="form-control" placeholder="Search...">
                        <span class="input-group-btn">
                            <button type="submit" name="search" id="search-btn" class="btn btn-flat">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </form>
                 /.search form -->
                <!-- sidebar menu: : style can be found in sidebar.less -->
                
                <ul class="sidebar-menu" data-widget="tree">
                    <li class="header">MAIN NAVIGATION</li>
                    @if (Session["User_role"].ToString() != "Employee")
                    {
                        <li @ViewBag.ActiveHomeIndex>
                            <a href="@Url.Action("Index", "Home")">
                                <i class="fa fa-dashboard"></i> <span>Dashboard</span>
                                <span class="pull-right-container">
                                </span>
                            </a>
                        </li>
                    }

                                      
                    @if (Session["User_role"].ToString() != "Employee")
                    {
                        <li class="@ViewBag.ActiveTreeEmployee treeview">
                            <a href="#">
                                <i class="fa fa-users"></i>
                                <span>Employee</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>
                            </a>
                            <ul class="treeview-menu">
                                @if (Session["User_role"].ToString() == "Administrator")
                                {
                                    <li @ViewBag.ActiveEmployeeAddEmployee><a href="@Url.Action("Create", "Employee")"><i class="fa fa-user-plus"></i> Add Employee</a></li>
                                }

                                <li @ViewBag.ActiveEmployeeListEmployee><a href="@Url.Action("Index", "Employee")"><i class="fa fa-list-alt"></i> List of Employees</a></li>

                                @if (Session["User_role"].ToString() == "Administrator")
                                {
                                    <li class="treeview">
                                        <a href="#">
                                            <i class="fa fa-print"></i> Reports
                                            <span class="pull-right-container">
                                                <i class="fa fa-angle-left pull-right"></i>
                                            </span>
                                        </a>
                                        <ul class="treeview-menu" id="t_dl">
                                            <li><a href="@Url.Action("EmployeeList", "Employee")"><i class="fa fa-download"></i> Employee List</a></li>
                                            <li><a href="@Url.Action("EmployeeListThisYear", "Employee")"><i class="fa fa-download"></i> Employee List (@DateTime.Now.Year)</a></li>
                                            <li><a href="@Url.Action("ActiveList", "Employee")"><i class="fa fa-download"></i> Active List</a></li>
                                            <li><a href="@Url.Action("PassiveList", "Employee")"><i class="fa fa-download"></i> Passive List</a></li>
                                            <li><a href="@Url.Action("SubstituteList", "Employee")"><i class="fa fa-download"></i> Substitute List</a></li>
                                            <li><a href="@Url.Action("PartTimeASList", "Employee")"><i class="fa fa-download"></i> Part-time List (AS)</a></li>
                                            <li><a href="@Url.Action("ProbationaryList", "Employee")"><i class="fa fa-download"></i> Probationary List</a></li>
                                            <li><a href="@Url.Action("PermanentList", "Employee")"><i class="fa fa-download"></i> Permanent List</a></li>
                                            <li><a href="@Url.Action("AdministratorList", "Employee")"><i class="fa fa-download"></i> Administrator List</a></li>
                                            <li><a href="@Url.Action("FacultyList", "Employee")"><i class="fa fa-download"></i> Faculty List</a></li>
                                            <li><a href="@Url.Action("PersonnelList", "Employee")"><i class="fa fa-download"></i> Personnel List</a></li>
                                            <li><a href="@Url.Action("StaffList", "Employee")"><i class="fa fa-download"></i> Staff List</a></li>
                                            <li><a href="@Url.Action("PartTimeWSList", "Employee")"><i class="fa fa-download"></i> Part-time List (WS)</a></li>
                                            <li><a href="@Url.Action("FullTimeList", "Employee")"><i class="fa fa-download"></i> Full-time List</a></li>
                                            <li><a href="@Url.Action("SASList", "Employee")"><i class="fa fa-download"></i> SAS List</a></li>
                                            <li><a href="@Url.Action("SBAList", "Employee")"><i class="fa fa-download"></i> SBA List</a></li>
                                            <li><a href="@Url.Action("SEList", "Employee")"><i class="fa fa-download"></i> SE List</a></li>
                                            <li><a href="@Url.Action("SEAList", "Employee")"><i class="fa fa-download"></i> SEA List</a></li>
                                            <li><a href="@Url.Action("SITList", "Employee")"><i class="fa fa-download"></i> SIT List</a></li>
                                            <li><a href="@Url.Action("SNList", "Employee")"><i class="fa fa-download"></i> SN List</a></li>
                                            <li><a href="@Url.Action("SBE1List", "Employee")"><i class="fa fa-download"></i> SBE (Elementary) List</a></li>
                                            <li><a href="@Url.Action("SBE2List", "Employee")"><i class="fa fa-download"></i> SBE (High School) List</a></li>
                                        </ul>
                                    </li>
                                }

                            </ul>
                        </li>
                    }
                   
                    

                    @if (Session["User_role"].ToString() == "Administrator" || Session["User_role"].ToString() == "President" || Session["User_role"].ToString() == "VPA" || Session["User_role"].ToString() == "VPAA")
                    {
                        <li class="@ViewBag.ActiveTreeApplicant treeview">
                            <a href="#">
                                <i class="fa fa-child"></i>
                                <span>Applicant</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>
                            </a>
                            <ul class="treeview-menu">
                                @if (Session["User_role"].ToString() == "Administrator")
                                {
                                    <li @ViewBag.ActiveApplicantAddApplicant><a href="@Url.Action("Create", "Applicant")"><i class="fa fa-user-plus"></i> Add Applicant</a></li>
                                }                                   
                                <li @ViewBag.ActiveApplicantListApplicant><a href="@Url.Action("Index", "Applicant")"><i class="fa fa-list-alt"></i> List of Applicants</a></li>
                                   
                                @if (Session["User_role"].ToString() == "Administrator")
                                {
                                    <li class="treeview">
                                        <a href="#">
                                            <i class="fa fa-print"></i> Reports
                                            <span class="pull-right-container">
                                                <i class="fa fa-angle-left pull-right"></i>
                                            </span>
                                        </a>
                                        <ul class="treeview-menu" id="t_dl2">
                                            <li><a href="@Url.Action("ApplicantList", "Applicant")"><i class="fa fa-download"></i> Applicant List</a></li>
                                        </ul>
                                    </li>
                                }
                                    
                            </ul>
                        </li>
                    }

                    @if (Session["User_role"].ToString() == "Administrator" || Session["User_role"].ToString() == "President" || Session["User_role"].ToString() == "VPA" || Session["User_role"].ToString() == "VPAA")
                    {
                        <li class="@ViewBag.ActiveTreeTrainingAndSeminar treeview">
                            <a href="#">
                                <i class="fa fa-globe"></i>
                                <span>Training and Seminar</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>
                            </a>
                            <ul class="treeview-menu">
                                @if (Session["User_role"].ToString() == "Administrator")
                                {
                                    <li @ViewBag.ActiveTrainingAndSeminarAddTrainingAndSeminar><a href="@Url.Action("Create", "TrainingSeminar")"><i class="fa fa-plus-circle"></i> Add Training/Seminar</a></li>
                                }                                   
                                <li @ViewBag.ActiveTrainingAndSeminarListTrainingAndSeminar><a href="@Url.Action("Index", "TrainingSeminar")"><i class="fa fa-list-alt"></i> List of Trainings/Seminars</a></li>
                                @if (Session["User_role"].ToString() == "Administrator")
                                {
                                    <li class="treeview">
                                        <a href="#">
                                            <i class="fa fa-print"></i> Reports
                                            <span class="pull-right-container">
                                                <i class="fa fa-angle-left pull-right"></i>
                                            </span>
                                        </a>
                                        <ul class="treeview-menu" id="t_dl3">
                                            <li><a href="@Url.Action("TrainingSeminarList", "TrainingSeminar")"><i class="fa fa-download"></i> Training and Seminar List</a></li>
                                        </ul>
                                    </li>
                                }
                                    
                            </ul>
                        </li>
                    }
                                                          

                    @if (Session["User_role"].ToString() == "Administrator")
                    {
                        <li class="@ViewBag.ActiveTreeSemester treeview">
                            <a href="#">
                                <i class="fa fa-institution"></i>
                                <span>Semester</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>
                            </a>
                            <ul class="treeview-menu">
                                <li @ViewBag.ActiveSemesterAddSemester><a href="@Url.Action("Create", "Semester")"><i class="fa fa-plus-circle"></i> Add Semester</a></li>
                                <li @ViewBag.ActiveSemesterListSemester><a href="@Url.Action("Index", "Semester")"><i class="fa fa-list-alt"></i> List of Semesters</a></li>
                            </ul>
                        </li>
                    }
                  

                    @if (Session["User_role"].ToString() == "Administrator")
                    {
                        <li class="@ViewBag.ActiveTreeUser treeview">
                            <a href="#">
                                <i class="fa fa-user"></i>
                                <span>User</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>
                            </a>
                            <ul class="treeview-menu">
                                <li @ViewBag.ActiveAccountAddUser><a href="@Url.Action("Create", "User")"><i class="fa fa-user-plus"></i> Add User</a></li>
                                <li @ViewBag.ActiveAccountListUser><a href="@Url.Action("Index", "User")"><i class="fa fa-list-alt"></i> List of Users</a></li>
                            </ul>
                        </li>
                    }

                    @if (Session["User_role"].ToString() == "Employee")
                    {
                        
                        <li @ViewBag.ActiveEmployeeRecord>
                            <a href="@Url.Action("Details", "Employee", new { id = Session["my_id"]})">
                                <i class="fa fa-file-text"></i> <span>My Employee Record</span>
                                <span class="pull-right-container">
                                </span>
                            </a>
                        </li>
                    }
                                                                            
                    <li @ViewBag.ActiveHomeAbout>
                        <a href="@Url.Action("About", "Home")">
                            <i class="fa fa-question-circle"></i> <span>Developers</span>
                            <span class="pull-right-container">
                            </span>
                        </a>
                    </li>

                    @if (Session["User_role"].ToString() == "Administrator")
                    {
                        <li class="header">LABELS</li>
                        <li><a><i class="fa fa-circle text-aqua"></i> <span>Employee</span></a></li>
                        <li><a><i class="fa fa-circle text-red"></i> <span>Applicant</span></a></li>
                        <li><a><i class="fa fa-circle text-green"></i> <span>Training and Seminar</span></a></li>
                        <li><a><i class="fa fa-circle text-yellow"></i> <span>Semester</span></a></li>
                    }
                    
                </ul>
            </section>

            <!-- /.sidebar -->
        </aside>
        <!-- =============================================== -->
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <div id="testDiv">
                <!-- Content Header (Page header) -->
                @RenderBody()
            </div>         
        </div>
        <!-- /.content-wrapper -->
        <footer class="main-footer">
            <div class="pull-right hidden-xs">
                <b>EIMS</b> 1.0
            </div>
            <strong>Copyright &copy; @DateTime.Now.Year <a href="https://adminlte.io">Almsaeed Studio</a>.</strong> All rights
            reserved.
        </footer>
        <!-- Control Sidebar -->
        
    </div>
    <!-- ./wrapper -->

    
    @Scripts.Render("~/jquery")  
    @Scripts.Render("~/jqueryval")
    @Scripts.Render("~/js")
    @Scripts.Render("~/respond")

    <!-- MaskedInput -->
    <script src="@Url.Content("~/Scripts/jquery.maskedinput.min.js")"></script>
    <!-- Select2 -->
    <script src="@Url.Content("~/Content/bower_components/select2/dist/js/select2.full.min.js")"></script>
    <!-- bootstrap datepicker -->
    <script src="@Url.Content("~/Content/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js")"></script>
    <!-- InputMask -->
    <script src="@Url.Content("~/Content/plugins/input-mask/jquery.inputmask.js")"></script>
    <script src="@Url.Content("~/Content/plugins/input-mask/jquery.inputmask.date.extensions.js")"></script>
    <script src="@Url.Content("~/Content/plugins/input-mask/jquery.inputmask.extensions.js")"></script>
    <!-- iCheck 1.0.1 -->
    <script src="@Url.Content("~/Content/plugins/iCheck/icheck.min.js")"></script>
    <!-- date-range-picker -->
    <script src="@Url.Content("~/Content/bower_components/moment/min/moment.min.js")"></script>
    <script src="@Url.Content("~/Content/bower_components/bootstrap-daterangepicker/daterangepicker.js")"></script>

    <script src="@Url.Content("~/Content/bower_components/raphael/raphael.min.js")"></script>
    <script src="@Url.Content("~/Content/bower_components/morris.js/morris.min.js")"></script>
    <script src="@Url.Content("~/Scripts/toastr.js")"></script>

    <!--<script>
        $(document).ready(function () {
            $("#showID").hide();
            $("#SelectRole").change(function() {
                if ($(this).val() === null) {
                    $("#showID").hide();
                }
                else  {
                    $("#showID").show();
                }
            }) 
        })
    </script> -->
    <script>
        function goBack() {
            window.history.back();
        }
    </script>

    <script type="text/javascript">

        $(document).ready(function () {
            if('@TempData["t_user"]' == "added") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Added User!");
            }

            if('@TempData["t_user"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated User!");
            }

            if('@TempData["t_user"]' == "deleted") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Deleted User!");
            }

            if('@TempData["t_userPic"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated User Picture!");
            }

            if('@TempData["t_app"]' == "added") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Added Applicant!");
            }

            if('@TempData["t_app"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Applicant!");
            }

            if('@TempData["t_app"]' == "deleted") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Deleted Applicant!");
            }

            if('@TempData["t_appPic"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Applicant Picture!");
            }

            if('@TempData["t_emp"]' == "added") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Added Employee!");
            }

            if('@TempData["t_emp"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Employee!");
            }

            if('@TempData["t_emp"]' == "deleted") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Turned Employee Passive!");
            }

            if('@TempData["t_empPic"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Employee Picture!");
            }

            if('@TempData["t_empUpl"]' == "uploaded") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Uploaded Employee File!");
            }

            if('@TempData["t_Info"]' == "added") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Added Additional Information!");
            }

            if('@TempData["t_Info"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Information!");
            }

            if('@TempData["t_Info"]' == "deleted") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Deleted Information!");
            }

            if('@TempData["t_ts"]' == "added") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Added Training/Seminar!");
            }

            if ('@TempData["t_ts"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Training/Seminar!");
            }

            if ('@TempData["t_ts"]' == "deleted") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Deleted Training/Seminar!");
            }

            if('@TempData["t_sem"]' == "added") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Added Semester!");
            }

            if ('@TempData["t_sem"]' == "updated") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Updated Semester!");
            }

            if ('@TempData["t_sem"]' == "deleted") {
                toastr.options = {
                    "positionClass": "toast-bottom-center"
                }
                toastr.success("Successfully Deleted Semester!");
            }

            if ('@TempData["t_in"]' == "in") {
                toastr.info("Welcome @Session["User_firstname"].ToString() @Session["User_middlename"].ToString() @Session["User_lastname"].ToString()!");
            }

            if ('@TempData["t_error"]' == "error") {
                toastr.danger("Username or Password is incorrect");
            }
        })

        $("#t_dl").click(function() {
            toastr.options = {
                "positionClass": "toast-bottom-center"
            }
            toastr.info("Downloading list...");
        })

        $("#t_dl2").click(function() {
            toastr.options = {
                "positionClass": "toast-bottom-center"
            }
            toastr.info("Downloading list...");
        })

        $("#t_dl3").click(function() {
            toastr.options = {
                "positionClass": "toast-bottom-center"
            }
            toastr.info("Downloading list...");
        })



    </script>

    <script>

        $(function () {
         
            $('#employeetable').DataTable({
                "responsive": true,
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        "targets": [1],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        "targets": [2],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        "targets": [3],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        "targets": [4],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        "targets": [5],
                        "visible": false,
                        "searchable": true
                    },
                     {
                         "targets": [6],
                         "visible": false,
                         "searchable": true
                     }

                ]                
            })

            $('#applicanttable').DataTable()

            $('#applicanteducationalbackground').DataTable({
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ],

                'paging': false,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })

            $('#applicantexperience').DataTable({
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ],

                'paging': false,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })

            $('#applicanttraining').DataTable({
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ],

                'paging': false,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })

            $('#trainingseminartable').DataTable({
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ]
            })

            $('#semestertable').DataTable({
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ]
            })
                  
            $('#usertable').DataTable()

            $('#datepicker').datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd'
            })
            $('#datepicker2').datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd'
            })
            $('#datepicker3').datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd'
            })
            $('#datepicker4').datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd'
            })
            $('#datepicker5').datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd'
            })

            $('.select2').select2()
        })
    
        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        })
        
        $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
            checkboxClass: 'icheckbox_minimal-red',
            radioClass: 'iradio_minimal-red'
        })
        
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        })

    </script>

    <script type="text/javascript">
        $(function () {
            $("#schoolyear").mask("9999-9999");
            $("#sss").mask("99-9999999-9");
            $("#tin").mask("999-999-999-999");
            $("#pagibig").mask("9999-9999-9999");
            $("#philhealth").mask("99-999999999-9");
            $("#year_patented").mask("9999");
            $("#examination_year").mask("9999");
            $("#year_obtained").mask("9999");
            $("#yeargraduated").mask("9999");
        });
    </script>

    <script type="text/javascript">
        function DownloadFile(fileId) {
            $("#hfFileId").val(fileId);
            $("#btnDownload")[0].click();
        };
    </script>

    

    <script>
         $(function () {
            /* ChartJS
             * -------
             * Here we will create a few charts using ChartJS
             */

            //--------------
            //- AREA CHART -
            //--------------

            // Get context with jQuery - using jQuery's .get() method.
            var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
            // This will get the first returned node in the jQuery collection.
            var areaChart       = new Chart(areaChartCanvas)

            var areaChartData = {
              labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
              datasets: [
                {
                  label               : '@DateTime.Now.AddYears(-1).Year',
                  fillColor           : 'rgba(210, 214, 222, 1)',
                  strokeColor         : 'rgba(210, 214, 222, 1)',
                  pointColor          : 'rgba(210, 214, 222, 1)',
                  pointStrokeColor    : '#c1c7d1',
                  pointHighlightFill  : '#fff',
                  pointHighlightStroke: 'rgba(220,220,220,1)',
                  data                : [@ViewBag.emplastJan, @ViewBag.emplastFeb, @ViewBag.emplastMar, @ViewBag.emplastApr, @ViewBag.emplastMay, @ViewBag.emplastJun, @ViewBag.emplastJul, @ViewBag.emplastAug, @ViewBag.emplastSep, @ViewBag.emplastOct, @ViewBag.emplastNov, @ViewBag.emplastDec]
                },
                {
                  label               : '@DateTime.Now.Year',
                  fillColor           : 'rgba(60,141,188,0.9)',
                  strokeColor         : 'rgba(60,141,188,0.8)',
                  pointColor          : '#3b8bba',
                  pointStrokeColor    : 'rgba(60,141,188,1)',
                  pointHighlightFill  : '#fff',
                  pointHighlightStroke: 'rgba(60,141,188,1)',
                  data                : [@ViewBag.empthisJan, @ViewBag.empthisFeb, @ViewBag.empthisMar, @ViewBag.empthisApr, @ViewBag.empthisMay, @ViewBag.empthisJun, @ViewBag.empthisJul, @ViewBag.empthisAug, @ViewBag.empthisSep, @ViewBag.empthisOct, @ViewBag.empthisNov, @ViewBag.empthisDec]
                }
              ]
            }

            var areaChartOptions = {
              //Boolean - If we should show the scale at all
              showScale               : true,
              //Boolean - Whether grid lines are shown across the chart
              scaleShowGridLines      : true,
              //String - Colour of the grid lines
              scaleGridLineColor      : 'rgba(0,0,0,.05)',
              //Number - Width of the grid lines
              scaleGridLineWidth      : 1,
              //Boolean - Whether to show horizontal lines (except X axis)
              scaleShowHorizontalLines: true,
              //Boolean - Whether to show vertical lines (except Y axis)
              scaleShowVerticalLines  : true,
              //Boolean - Whether the line is curved between points
              bezierCurve             : true,
              //Number - Tension of the bezier curve between points
              bezierCurveTension      : 0.3,
              //Boolean - Whether to show a dot for each point
              pointDot                : false,
              //Number - Radius of each point dot in pixels
              pointDotRadius          : 4,
              //Number - Pixel width of point dot stroke
              pointDotStrokeWidth     : 1,
              //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
              pointHitDetectionRadius : 20,
              //Boolean - Whether to show a stroke for datasets
              datasetStroke           : true,
              //Number - Pixel width of dataset stroke
              datasetStrokeWidth      : 2,
              //Boolean - Whether to fill the dataset with a color
              datasetFill             : true,
              //String - A legend template
              legendTemplate          : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
              //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
              maintainAspectRatio     : true,
              //Boolean - whether to make the chart responsive to window resizing
              responsive: true,
              multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"

            }

            //Create the line chart
            areaChart.Line(areaChartData, areaChartOptions)


            //-------------
            //- LINE CHART -
            //--------------
            var lineChartCanvas          = $('#lineChart').get(0).getContext('2d')
            var lineChart                = new Chart(lineChartCanvas)

            var lineChartData = {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [
                  {
                      label: '@DateTime.Now.AddYears(-1).Year',
                      fillColor: 'rgba(210, 214, 222, 1)',
                      strokeColor: 'rgba(210, 214, 222, 1)',
                      pointColor: 'rgba(210, 214, 222, 1)',
                      pointStrokeColor: '#c1c7d1',
                      pointHighlightFill: '#fff',
                      pointHighlightStroke: 'rgba(220,220,220,1)',
                      data: [@ViewBag.applastJan, @ViewBag.applastFeb, @ViewBag.applastMar, @ViewBag.applastApr, @ViewBag.applastMay, @ViewBag.applastJun, @ViewBag.applastJul, @ViewBag.applastAug, @ViewBag.applastSep, @ViewBag.applastOct, @ViewBag.applastNov, @ViewBag.applastDec]
                  },
                  {
                      label: '@DateTime.Now.Year',
                      fillColor: 'rgba(60,141,188,0.9)',
                      strokeColor: 'rgba(60,141,188,0.8)',
                      pointColor: '#3b8bba',
                      pointStrokeColor: 'rgba(60,141,188,1)',
                      pointHighlightFill: '#fff',
                      pointHighlightStroke: 'rgba(60,141,188,1)',
                      data: [@ViewBag.appthisJan, @ViewBag.appthisFeb, @ViewBag.appthisMar, @ViewBag.appthisApr, @ViewBag.appthisMay, @ViewBag.appthisJun, @ViewBag.appthisJul, @ViewBag.appthisAug, @ViewBag.appthisSep, @ViewBag.appthisOct, @ViewBag.appthisNov, @ViewBag.appthisDec]
                  }
                ]
            }

            var lineChartOptions         = areaChartOptions
            lineChartOptions.datasetFill = false
            lineChart.Line(lineChartData, lineChartOptions)

            //-------------
            //- PIE CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.
            var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
            var pieChart       = new Chart(pieChartCanvas)
            var PieData        = [
              {
                value    : @ViewBag.admin,
                color    : '#20c73e',
                highlight: '#20c73e',
                label    : 'Administrator'
              },
              {
                value    : @ViewBag.faculty,
                color    : '#0082c8',
                highlight: '#0082c8',
                label    : 'Faculty'
              },
              {
                value    : @ViewBag.personnel,
                color    : '#ff0000',
                highlight: '#ff0000',
                label    : 'Personnel'
              },
              {
                value    :  @ViewBag.staff,
                color    : '#ebd817',
                highlight: '#ebd817',
                label    : 'Staff'
              }
            ]
            var pieOptions     = {
              //Boolean - Whether we should show a stroke on each segment
              segmentShowStroke    : true,
              //String - The colour of each segment stroke
              segmentStrokeColor   : '#fff',
              //Number - The width of each segment stroke
              segmentStrokeWidth   : 2,
              //Number - The percentage of the chart that we cut out of the middle
              percentageInnerCutout: 50, // This is 0 for Pie charts
              //Number - Amount of animation steps
              animationSteps       : 100,
              //String - Animation easing effect
              animationEasing      : 'easeOutBounce',
              //Boolean - Whether we animate the rotation of the Doughnut
              animateRotate        : true,
              //Boolean - Whether we animate scaling the Doughnut from the centre
              animateScale         : true,
              //Boolean - whether to make the chart responsive to window resizing
              responsive           : true,
              // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
              maintainAspectRatio  : true,
              //String - A legend template
              legendTemplate       : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'

            }
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            pieChart.Doughnut(PieData, pieOptions)

            var pieChartCanvas1 = $('#pieChart1').get(0).getContext('2d')
            var pieChart1       = new Chart(pieChartCanvas1)
            var PieData1        = [
              {
                  value    : @ViewBag.male,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Male'
              },
              {
                  value    : @ViewBag.female,
                  color    : '#ff63f7',
                  highlight: '#ff63f7',
                  label    : 'Female'
              }
            ]

            pieChart1.Doughnut(PieData1, pieOptions)


            var pieChartCanvas2 = $('#pieChart2').get(0).getContext('2d')
            var pieChart2       = new Chart(pieChartCanvas2)
            var PieData2        = [
              {
                  value    : @ViewBag.single,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Single'
              },
              {
                  value    : @ViewBag.married,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Married'
              }
            ]
        
            pieChart2.Doughnut(PieData2, pieOptions)

            var pieChartCanvas3 = $('#pieChart3').get(0).getContext('2d')
            var pieChart3       = new Chart(pieChartCanvas3)
            var PieData3        = [
              {
                  value    : @ViewBag.substitute,
                  color    : '#ebd817',
                  highlight: '#ebd817',
                  label    : 'Substitute'
              },
              {
                  value    : @ViewBag.parttimeAS,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Part-time'
              },
              {
                  value    : @ViewBag.probationary,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Probationary'
              },
              {
                  value    : @ViewBag.permanent,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Permanent'
              }
            ]
        
            pieChart3.Doughnut(PieData3, pieOptions)
  
            var pieChartCanvas5 = $('#pieChart5').get(0).getContext('2d')
            var pieChart5       = new Chart(pieChartCanvas5)
            var PieData5        = [
              {
                  value    : @ViewBag.postGrad,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Postgraduate'
              },
              {
                  value    : @ViewBag.Grad,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Gradute'
              },
              {
                  value    : @ViewBag.underGrad,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Undergraduate'
              }

            ]
        
            pieChart5.Doughnut(PieData5, pieOptions)

            var pieChartCanvas6 = $('#pieChart6').get(0).getContext('2d')
            var pieChart6       = new Chart(pieChartCanvas6)
            var PieData6        = [
              {
                  value    : @ViewBag.parttimeWS,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Part-time'
              },
              {
                  value    : @ViewBag.fulltime,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Full-time'
              }

            ]
        
            pieChart6.Doughnut(PieData6, pieOptions)
            
            //-------------
            //- BAR CHART -
            //-------------
            var barChartCanvas                   = $('#barChart').get(0).getContext('2d')
            var barChart                         = new Chart(barChartCanvas)
            var barChartData = {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [
                  {
                      label: '@DateTime.Now.AddYears(-1).Year',
                      fillColor: 'rgba(210, 214, 222, 1)',
                      strokeColor: 'rgba(210, 214, 222, 1)',
                      pointColor: 'rgba(210, 214, 222, 1)',
                      pointStrokeColor: '#c1c7d1',
                      pointHighlightFill: '#fff',
                      pointHighlightStroke: 'rgba(220,220,220,1)',
                      data: [@ViewBag.tslastJan, @ViewBag.tslastFeb, @ViewBag.tslastMar, @ViewBag.tslastApr, @ViewBag.tslastMay, @ViewBag.tslastJun, @ViewBag.tslastJul, @ViewBag.tslastAug, @ViewBag.tslastSep, @ViewBag.tslastOct, @ViewBag.tslastNov, @ViewBag.tslastDec]
                  },
                  {
                      label: '@DateTime.Now.Year',
                      fillColor: 'rgba(60,141,188,0.9)',
                      strokeColor: 'rgba(60,141,188,0.8)',
                      pointColor: '#3b8bba',
                      pointStrokeColor: 'rgba(60,141,188,1)',
                      pointHighlightFill: '#fff',
                      pointHighlightStroke: 'rgba(60,141,188,1)',
                      data: [@ViewBag.tsthisJan, @ViewBag.tsthisFeb, @ViewBag.tsthisMar, @ViewBag.tsthisApr, @ViewBag.tsthisMay, @ViewBag.tsthisJun, @ViewBag.tsthisJul, @ViewBag.tsthisAug, @ViewBag.tsthisSep, @ViewBag.tsthisOct, @ViewBag.tsthisNov, @ViewBag.tsthisDec]
                  }
                ]
            }
            barChartData.datasets[1].fillColor   = '#00a65a'
            barChartData.datasets[1].strokeColor = '#00a65a'
            barChartData.datasets[1].pointColor  = '#00a65a'
            var barChartOptions                  = {
              //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
              scaleBeginAtZero        : true,
              //Boolean - Whether grid lines are shown across the chart
              scaleShowGridLines      : true,
              //String - Colour of the grid lines
              scaleGridLineColor      : 'rgba(0,0,0,.05)',
              //Number - Width of the grid lines
              scaleGridLineWidth      : 1,
              //Boolean - Whether to show horizontal lines (except X axis)
              scaleShowHorizontalLines: true,
              //Boolean - Whether to show vertical lines (except Y axis)
              scaleShowVerticalLines  : true,
              //Boolean - If there is a stroke on each bar
              barShowStroke           : true,
              //Number - Pixel width of the bar stroke
              barStrokeWidth          : 2,
              //Number - Spacing between each of the X value sets
              barValueSpacing         : 5,
              //Number - Spacing between data sets within X values
              barDatasetSpacing       : 1,
              //String - A legend template
              legendTemplate          : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
              //Boolean - whether to make the chart responsive
              responsive              : true,
              maintainAspectRatio: true,
              multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
            }

            barChartOptions.datasetFill = false
            barChart.Bar(barChartData, barChartOptions)
      })

    </script>


    <script>
        var donut = new Morris.Donut({
            element: 'dept-chart',
            resize: true,
            colors: ["#fff0f0", "#ffe300", "#000aff", "#ffa900", "#e02bcb", "#1db323", "#ff0000", "#d41515"],
            data: [
              {label: "School of Arts and Sciences", value: @ViewBag.deptSAS},
              {label: "School of Business and Accountancy", value: @ViewBag.deptSBA},
              {label: "School of Education", value: @ViewBag.deptSE},
              {label: "School of Engineering and Architecture", value: @ViewBag.deptSEA},
              {label: "School of Information Technology", value: @ViewBag.deptSIT},
              {label: "School of Nursing", value: @ViewBag.deptSN},
              {label: "SBE (Elementary)", value: @ViewBag.deptSBE1},
              {label: "SBE (High School)", value: @ViewBag.deptSBe2}

            ],
            hideHover: 'auto'
        });
    </script>

    <script>
        $(function () {
            //-------------
            //- PIE CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.
            var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
            var pieChart       = new Chart(pieChartCanvas)
            var PieData        = [
              {
                  value    : @ViewBag.admin,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Administrator'
              },
              {
                  value    : @ViewBag.faculty,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Faculty'
              },
              {
                  value    : @ViewBag.personnel,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Personnel'
              },
              {
                  value    :  @ViewBag.staff,
                  color    : '#ebd817',
                  highlight: '#ebd817',
                  label    : 'Staff'
              }
            ]
            var pieOptions     = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke    : true,
                //String - The colour of each segment stroke
                segmentStrokeColor   : '#fff',
                //Number - The width of each segment stroke
                segmentStrokeWidth   : 2,
                //Number - The percentage of the chart that we cut out of the middle
                percentageInnerCutout: 50, // This is 0 for Pie charts
                //Number - Amount of animation steps
                animationSteps       : 100,
                //String - Animation easing effect
                animationEasing      : 'easeOutBounce',
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate        : true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale         : true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive           : true,
                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio  : true,
                //String - A legend template
                legendTemplate       : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'

            }
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            pieChart.Doughnut(PieData, pieOptions)

            var pieChartCanvas1 = $('#pieChart1').get(0).getContext('2d')
            var pieChart1       = new Chart(pieChartCanvas1)
            var PieData1        = [
              {
                  value    : @ViewBag.male,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Male'
              },
              {
                  value    : @ViewBag.female,
                  color    : '#ff63f7',
                  highlight: '#ff63f7',
                  label    : 'Female'
              }
            ]

            pieChart1.Doughnut(PieData1, pieOptions)


            var pieChartCanvas2 = $('#pieChart2').get(0).getContext('2d')
            var pieChart2       = new Chart(pieChartCanvas2)
            var PieData2        = [
              {
                  value    : @ViewBag.single,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Single'
              },
              {
                  value    : @ViewBag.married,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Married'
              }
            ]

            pieChart2.Doughnut(PieData2, pieOptions)

            var pieChartCanvas3 = $('#pieChart3').get(0).getContext('2d')
            var pieChart3       = new Chart(pieChartCanvas3)
            var PieData3        = [
              {
                  value    : @ViewBag.substitute,
                  color    : '#ebd817',
                  highlight: '#ebd817',
                  label    : 'Substitute'
              },
              {
                  value    : @ViewBag.parttimeAS,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Part-time'
              },
              {
                  value    : @ViewBag.probationary,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Probationary'
              },
              {
                  value    : @ViewBag.permanent,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Permanent'
              }
            ]

            pieChart3.Doughnut(PieData3, pieOptions)

            var pieChartCanvas5 = $('#pieChart5').get(0).getContext('2d')
            var pieChart5       = new Chart(pieChartCanvas5)
            var PieData5        = [
              {
                  value    : @ViewBag.postGrad,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Postgraduate'
              },
              {
                  value    : @ViewBag.Grad,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Gradute'
              },
              {
                  value    : @ViewBag.underGrad,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Undergraduate'
              }

            ]

            pieChart5.Doughnut(PieData5, pieOptions)

            var pieChartCanvas6 = $('#pieChart6').get(0).getContext('2d')
            var pieChart6       = new Chart(pieChartCanvas6)
            var PieData6        = [
              {
                  value    : @ViewBag.parttimeWS,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Part-time'
              },
              {
                  value    : @ViewBag.fulltime,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Full-time'
              }

            ]

            pieChart6.Doughnut(PieData6, pieOptions)
        })
    </script>


    <script>
        $(function () {

            //--------------
            //- AREA CHART -
            //--------------

            // Get context with jQuery - using jQuery's .get() method.
            var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
            // This will get the first returned node in the jQuery collection.
            var areaChart       = new Chart(areaChartCanvas)

            var areaChartData = {
                labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [
                  {
                      label               : '@DateTime.Now.AddYears(-1).Year',
                      fillColor           : 'rgba(210, 214, 222, 1)',
                      strokeColor         : 'rgba(210, 214, 222, 1)',
                      pointColor          : 'rgba(210, 214, 222, 1)',
                      pointStrokeColor    : '#c1c7d1',
                      pointHighlightFill  : '#fff',
                      pointHighlightStroke: 'rgba(220,220,220,1)',
                      data                : [@ViewBag.emplastJan, @ViewBag.emplastFeb, @ViewBag.emplastMar, @ViewBag.emplastApr, @ViewBag.emplastMay, @ViewBag.emplastJun, @ViewBag.emplastJul, @ViewBag.emplastAug, @ViewBag.emplastSep, @ViewBag.emplastOct, @ViewBag.emplastNov, @ViewBag.emplastDec]
                  },
                  {
                      label               : '@DateTime.Now.Year',
                      fillColor           : 'rgba(60,141,188,0.9)',
                      strokeColor         : 'rgba(60,141,188,0.8)',
                      pointColor          : '#3b8bba',
                      pointStrokeColor    : 'rgba(60,141,188,1)',
                      pointHighlightFill  : '#fff',
                      pointHighlightStroke: 'rgba(60,141,188,1)',
                      data                : [@ViewBag.empthisJan, @ViewBag.empthisFeb, @ViewBag.empthisMar, @ViewBag.empthisApr, @ViewBag.empthisMay, @ViewBag.empthisJun, @ViewBag.empthisJul, @ViewBag.empthisAug, @ViewBag.empthisSep, @ViewBag.empthisOct, @ViewBag.empthisNov, @ViewBag.empthisDec]
                  }
                ]
            }

            var areaChartOptions = {
                //Boolean - If we should show the scale at all
                showScale               : true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines      : true,
                //String - Colour of the grid lines
                scaleGridLineColor      : 'rgba(0,0,0,.05)',
                //Number - Width of the grid lines
                scaleGridLineWidth      : 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines  : true,
                //Boolean - Whether the line is curved between points
                bezierCurve             : true,
                //Number - Tension of the bezier curve between points
                bezierCurveTension      : 0.3,
                //Boolean - Whether to show a dot for each point
                pointDot                : false,
                //Number - Radius of each point dot in pixels
                pointDotRadius          : 4,
                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth     : 1,
                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius : 20,
                //Boolean - Whether to show a stroke for datasets
                datasetStroke           : true,
                //Number - Pixel width of dataset stroke
                datasetStrokeWidth      : 2,
                //Boolean - Whether to fill the dataset with a color
                datasetFill             : true,
                //String - A legend template
                legendTemplate          : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio     : true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true,
                multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"

            }

            //Create the line chart
            areaChart.Line(areaChartData, areaChartOptions)

            var pieOptions     = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke    : true,
                //String - The colour of each segment stroke
                segmentStrokeColor   : '#fff',
                //Number - The width of each segment stroke
                segmentStrokeWidth   : 2,
                //Number - The percentage of the chart that we cut out of the middle
                percentageInnerCutout: 50, // This is 0 for Pie charts
                //Number - Amount of animation steps
                animationSteps       : 100,
                //String - Animation easing effect
                animationEasing      : 'easeOutBounce',
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate        : true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale         : true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive           : true,
                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio  : true,
                //String - A legend template
                legendTemplate       : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'

            }

            var pieChartCanvas1 = $('#pieChart1').get(0).getContext('2d')
            var pieChart1       = new Chart(pieChartCanvas1)
            var PieData1        = [
              {
                  value    : @ViewBag.male,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Male'
              },
              {
                  value    : @ViewBag.female,
                  color    : '#ff63f7',
                  highlight: '#ff63f7',
                  label    : 'Female'
              }
            ]

            pieChart1.Doughnut(PieData1, pieOptions)


            var pieChartCanvas2 = $('#pieChart2').get(0).getContext('2d')
            var pieChart2       = new Chart(pieChartCanvas2)
            var PieData2        = [
              {
                  value    : @ViewBag.single,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Single'
              },
              {
                  value    : @ViewBag.married,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Married'
              }
            ]

            pieChart2.Doughnut(PieData2, pieOptions)

            var pieChartCanvas3 = $('#pieChart3').get(0).getContext('2d')
            var pieChart3       = new Chart(pieChartCanvas3)
            var PieData3        = [
              {
                  value    : @ViewBag.substitute,
                  color    : '#ebd817',
                  highlight: '#ebd817',
                  label    : 'Substitute'
              },
              {
                  value    : @ViewBag.parttimeAS,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Part-time'
              },
              {
                  value    : @ViewBag.probationary,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Probationary'
              },
              {
                  value    : @ViewBag.permanent,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Permanent'
              }
            ]

            pieChart3.Doughnut(PieData3, pieOptions)

            var pieChartCanvas5 = $('#pieChart5').get(0).getContext('2d')
            var pieChart5       = new Chart(pieChartCanvas5)
            var PieData5        = [
              {
                  value    : @ViewBag.postGrad,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Postgraduate'
              },
              {
                  value    : @ViewBag.Grad,
                  color    : '#0082c8',
                  highlight: '#0082c8',
                  label    : 'Gradute'
              },
              {
                  value    : @ViewBag.underGrad,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Undergraduate'
              }

            ]

            pieChart5.Doughnut(PieData5, pieOptions)

            var pieChartCanvas6 = $('#pieChart6').get(0).getContext('2d')
            var pieChart6       = new Chart(pieChartCanvas6)
            var PieData6        = [
              {
                  value    : @ViewBag.parttimeWS,
                  color    : '#ff0000',
                  highlight: '#ff0000',
                  label    : 'Part-time'
              },
              {
                  value    : @ViewBag.fulltime,
                  color    : '#20c73e',
                  highlight: '#20c73e',
                  label    : 'Full-time'
              }

            ]

            pieChart6.Doughnut(PieData6, pieOptions)
        })
    </script>


    <script>
        $(document).ready(function () {
            $('.sidebar-menu').tree()
        })
    </script>

    @RenderSection("Scripts", required: false)

</body>
</html>
