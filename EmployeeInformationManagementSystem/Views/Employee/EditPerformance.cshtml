@model EmployeeInformationManagementSystem.Models.EmployeePerformance

@{
    ViewBag.Title = "Update Performance";
}

<section class="content-header">
    <h1>
        &nbsp;
    </h1>
    <ol class="breadcrumb">
        <li><i class="fa fa-child"></i> Employee</li>
        <li><i class="fa fa-list-alt"></i> List of Employees</li>
        <li><i class="fa fa-info-circle"></i> Employee Details</li>
        <li class="active"><i class="fa fa-edit"></i> Update Performance</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form role="form">
                <!-- left column -->
                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 class="box-title">Performance Information</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body">
                            @Html.HiddenFor(model => model.p_id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.evaluation_date, htmlAttributes: new { @class = "control-label" }) <label class="required">*</label>
                                @Html.EditorFor(model => model.evaluation_date, new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                                @Html.ValidationMessageFor(model => model.evaluation_date, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.evaluation_period, htmlAttributes: new { @class = "control-label" }) <label class="required">*</label>
                                @Html.EditorFor(model => model.evaluation_period, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.evaluation_period, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.semester, htmlAttributes: new { @class = "control-label" }) <label class="required">*</label>
                                @Html.DropDownListFor(model => model.semester, (IEnumerable<SelectListItem>)ViewBag.Semester4, "--Select Semester--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.semester, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.evaluator, htmlAttributes: new { @class = "control-label" }) <label class="required">*</label>
                                @Html.EditorFor(model => model.evaluator, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.evaluator, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.evaluation_score, htmlAttributes: new { @class = "control-label" }) <label class="required">*</label>
                                @Html.EditorFor(model => model.evaluation_score, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.evaluation_score, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.rating, htmlAttributes: new { @class = "control-label" }) <label class="required">*</label>
                                @Html.DropDownListFor(model => model.rating, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="Outstanding", Value="Outstanding" },
                                    new SelectListItem { Text="Very Satisfactory", Value="Very Satisfactory" },
                                    new SelectListItem { Text="Satisfactory", Value="Satisfactory" },
                                    new SelectListItem { Text="Not Satisfactory", Value="Not Satisfactory" }

                                }, "--Select Rating--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })

                            </div>

                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </form>
        }
    </div>
</section>

